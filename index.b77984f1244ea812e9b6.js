"use strict";(self.webpackChunkshop=self.webpackChunkshop||[]).push([[826],{4976:(e,n,t)=>{var r=t(9963),o=t(6252),u={id:"nav"},s=(0,o.Uk)("Home"),a=(0,o.Uk)("| "),i=(0,o.Uk)("Test"),c=t(3744);const m={},l=(0,c.Z)(m,[["render",function(e,n){var t=(0,o.up)("router-link"),r=(0,o.up)("router-view");return(0,o.wg)(),(0,o.iD)(o.HY,null,[(0,o._)("div",u,[(0,o.Wm)(t,{to:"/"},{default:(0,o.w5)((function(){return[s]})),_:1}),a,(0,o.Wm)(t,{to:"/test"},{default:(0,o.w5)((function(){return[i]})),_:1})]),(0,o.Wm)(r)],64)}]]);t(6992),t(1539),t(8674),t(8783),t(3948);var p=t(2119),f=t(4800),v={class:"home"},d=(0,o._)("img",{alt:"Vue logo",src:f},null,-1),h=t(3577),g={class:"hello"},k=function(e){return(0,o.dD)("data-v-0533b6a1"),e=e(),(0,o.Cn)(),e}((function(){return(0,o._)("p",null,"TEXT，TEXT，TEXT，TEXT，TEXT，TEXT，",-1)}));const T=(0,o.aZ)({name:"HelloWorld",props:{msg:String}}),w=(0,c.Z)(T,[["render",function(e,n,t,r,u,s){return(0,o.wg)(),(0,o.iD)("div",g,[(0,o._)("h1",null,(0,h.zw)(e.msg),1),k])}],["__scopeId","data-v-0533b6a1"]]),E=(0,o.aZ)({name:"Home",components:{HelloWorld:w}}),_=(0,c.Z)(E,[["render",function(e,n,t,r,u,s){var a=(0,o.up)("HelloWorld");return(0,o.wg)(),(0,o.iD)("div",v,[(0,o.kq)(" {{ token }} "),d,(0,o.Wm)(a,{msg:"Welcome"})])}]]);var b=function(e){return"/manage/".concat(e)},P=[{path:b("home"),name:"home",component:_},{path:b("test"),name:"test",component:function(){return Promise.all([t.e(216),t.e(205)]).then(t.bind(t,1205))}}];const W=(0,p.p7)({history:(0,p.PO)(),routes:P});t(5666);var x=t(894),y=t(9669),H=t.n(y)().create({baseURL:"",timeout:3e3});H.interceptors.request.use((function(e){return e.headers.Authorization=C.state.token?"Bearer "+C.state.token:"Bearer",e}),(function(e){Promise.reject(e)})),H.interceptors.response.use((function(e){return e.data}),(function(e){return Promise.reject(e.response)}));const U=H;function X(e,n,t,r,o,u,s){try{var a=e[u](s),i=a.value}catch(e){return void t(e)}a.done?n(i):Promise.resolve(i).then(r,o)}function O(e){return function(){var n=this,t=arguments;return new Promise((function(r,o){var u=e.apply(n,t);function s(e){X(u,r,o,s,a,"next",e)}function a(e){X(u,r,o,s,a,"throw",e)}s(void 0)}))}}function R(){return(R=O(regeneratorRuntime.mark((function e(n,t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,U.get(n,t);case 2:return r=e.sent,e.abrupt("return",Promise.resolve(r));case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Z(e,n,t,r,o,u,s){try{var a=e[u](s),i=a.value}catch(e){return void t(e)}a.done?n(i):Promise.resolve(i).then(r,o)}var D={getUser:function(e){return(n=regeneratorRuntime.mark((function n(){var t,r;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t=e.commit,n.next=3,function(e,n){return R.apply(this,arguments)}("/user",void 0);case 3:r=n.sent,t("SET_TOKEN",r.token);case 5:case"end":return n.stop()}}),n)})),function(){var e=this,t=arguments;return new Promise((function(r,o){var u=n.apply(e,t);function s(e){Z(u,r,o,s,a,"next",e)}function a(e){Z(u,r,o,s,a,"throw",e)}s(void 0)}))})();var n}};const C=(0,x.MT)({state:{token:""},mutations:{SET_TOKEN:function(e,n){e.token=n}},actions:D,getters:{hasUser:function(e){return e.token}},modules:{}});(0,r.ri)(l).use(W).use(C).mount("#root")},4800:(e,n,t)=>{e.exports=t.p+"26bd867dd65e26dbc77d.png"}},e=>{e.O(0,[216],(()=>(4976,e(e.s=4976)))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,